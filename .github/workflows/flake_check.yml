name: Run nix-eval-jobs

on:
  pull_request_target:
    types: [labeled]
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_run:
    workflows: ["Periodic flake bump"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  nix_eval_jobs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - uses: cachix/install-nix-action@6a9a9e84a173d90b3ffb42c5ddaf9ea033fad011 # v23
        with:
          extra_nix_config: |
            accept-flake-config = true
            experimental-features = nix-command flakes
            system-features = big-parallel kvm
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Run nix-eval-jobs on flake outputs
        run: |
          outputs=(nixosConfigurations checks packages nixOnDroidConfigurations devShell hydraJobs)

          for output in "${outputs[@]}"; do
            nix run nixpkgs#nix-eval-jobs -- --workers "$(nproc)" --max-memory-size "$(free -m | grep ^Mem | tr -s ' ' | cut -d ' ' -f 3)" --gc-roots-dir /tmp/gcroot --flake .#"$output" | tee eval.json
          done

          jq -c 'select(.error)' eval.json | tee errors.json
          if [ "$(wc -l <errors.json)" -gt 0 ]; then 
            exit 1; 
          fi
